apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-app
  labels:
    app: devops-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: devops-app
  template:
    metadata:
      labels:
        app: devops-app
    spec:
      serviceAccountName: devops-app-sa
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""  # Запускаем на control plane узле
      initContainers:
      - name: build-image
        image: docker:20.10-dind
        command: ["sh"]
        args:
        - -c
        - |
          # Ждем запуска Docker daemon
          sleep 10
          
          # Клонируем репозиторий
          apk add --no-cache git
          git clone https://github.com/sttewiee/bestdevops.git
          cd bestdevops
          
          # Собираем образ
          docker build -t devops-app:latest .
          echo "✅ Docker образ собран успешно"
        env:
        - name: DOCKER_HOST
          value: "tcp://localhost:2375"
        - name: DOCKER_DRIVER
          value: "overlay2"
        - name: DOCKER_TLS_CERTDIR
          value: ""
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
      containers:
      - name: devops-app
        image: devops-app:latest  # ← Используем локальный образ
        imagePullPolicy: Never   # ← Не пытаемся загружать из registry
        ports:
        - containerPort: 3000
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: devops-app-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: devops-app-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: devops-app-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
